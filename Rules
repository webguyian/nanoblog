#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
  # authors may unpublish items by setting meta attribute publish: false
  items.delete_if { |item| item[:publish] == false }
end

static_pages = ['/about/', '/contact/', '/archive/']
is_index = /\/index.*$/ 
is_main = /\/style.*$/

########################################
## Blog
compile '/blog/*' do
  if item[:content_filename] =~ is_index
      filter :erb
    # filter :relativize_paths, :type => :html
    layout 'blog'
  else
    filter :kramdown
    # filter :relativize_paths, :type => :html
    layout 'post'
  end
end

route '/blog/*' do
  # item.identifier.chop + '.html'
    item.identifier + "index.html"
end

########################################
## Static

static_pages.each do |page|
  route page do
    page.chop + '.html'
  end
end

compile '/CNAME/' do
end

route '/CNAME/' do
  '/CNAME'
end

########################################
## General

compile '/css/*' do
    # filter :relativize_paths, :type => :css
end

route '/css/*' do
  if item[:content_filename] =~ is_main
    item.identifier.chop + '.min.css'
  else
    nil
  end
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
  end
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  elsif
    item[:content_filename] =~ is_index 
    item.identifier + 'index.html' 
  else 
   item.identifier + 'index.html'
  end
end

layout '*', :erb